package com.maraxai.firstapp.domain;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.ManyToMany;

// declare this for Hibernate as an entity by annotating it with @Entity
@Entity
public class Student {

  /*
  * FIELDS
  */
  // make this persistence field the primary key of the entity with the annotation @Id
  // @generatedValue declares this field as a value that is generated by the database
  @Id
  @GeneratedValue(strategy = GenerationType.AUTO)
  private Long id;

  private String firstName;
  private String lastName;

  // annotate the private field as a many-to-many relationship, mapped by the property students 
  @ManyToMany(mappedBy = "students")
  private Set<Course> courses = new HashSet<>();

  /*
    CONSTRUCTORS, constructor overloading
  */
  // empty constructor, needed for Hibernate to handle the JPA
  public Student() {
  }

  // constructor
  public Student(String firstName, String lastName) {
    this.firstName = firstName;
    this.lastName = lastName;
  }

  /*
    SETTERS/MUTATORS
  */
  public void setId(Long id) {
    this.id = id;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public void setCourses(Set<Course> courses) {
    this.courses = courses;
  }

  /*
    GETTERS/ACCESSORS
  */
  public Long getId() {
    return id;
  }

  public String getFirstName() {
    return firstName;
  }

  public String getLastName() {
    return lastName;
  }

  public Set<Course> getCourses() {
    return courses;
  }

  // Override the methods equals(), hashCode() and toString()
  @Override
  public int hashCode() {
    return id != null ? id.hashCode() : 0;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) return true;
    if (o == null || getClass() != o.getClass()) return false;

    Student student = (Student) o;

    return id != null ? id.equals(student.id) : student.id == null;
  }

  @Override
  public String toString() {
    return "Student{" +
      "id=" + id +
      ", firstName=' " + firstName + "\' " +
      ", lastName=' " + lastName + "\' " +
    '}';
  }

}